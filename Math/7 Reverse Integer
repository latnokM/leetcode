Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

32 bit int range -2147483648 to 2147483647

// (a/b)*b + a%b == a, so -123 % 10 = -3.   123 % -10 =  3
// time O(logx)
class Solution {
public:
    int reverse(int x) {
       // (a/b)*b + a%b == a, so -123 % 10 = -3.   123 % -10 =  3
        int res(0);
        while(x != 0) {
            if(res > INT_MAX / 10 || res < INT_MIN / 10) return 0;
            res = res * 10 + x % 10;
            x /= 10;
        }
        return res;
    }
};
