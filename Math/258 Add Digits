Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

Example:

Input: 38
Output: 2 
Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. 
             Since 2 has only one digit, return it.
Follow up:
Could you do it without any loop/recursion in O(1) runtime?

// O(n)
class Solution {
public:
    int addDigits(int num) {
        while(num > 9)
            num = num / 10 + num % 10;
        return num;
    }
};

//O(1)
class Solution {
public:
    int addDigits(int num) {
        //digital root: 
        //  dr(n) = 0  if n == 0
        //  dr(n) = 9  if n != 0 and n % 9 == 0
        //  dr(n) = n % 9  if n % 9 != 0
        //or  dr(n) = 1 + (n - 1) % 9;
        return 1 + (num - 1) % 9;
    }
};
