Given a sorted integer array nums, where the range of elements are in the inclusive range [lower, upper], return its missing ranges.

Example:

Input: nums = [0, 1, 3, 50, 75], lower = 0 and upper = 99,
Output: ["2", "4->49", "51->74", "76->99"]

class Solution {
public:
    vector<string> findMissingRanges(vector<int>& nums, int lower, int upper) {        
        long left, right;        
        vector<string> res;
        for(int i = 0; i <= nums.size(); ++i) {
            left = (i == 0) ? lower : (long)nums[i - 1] + 1;
            right = (i == nums.size()) ? upper : (long)nums[i] - 1;
            if(right > left)
                res.push_back(to_string(left) + "->" + to_string(right));
            else if(right == left)
                res.push_back(to_string(left));
        }
        return res;
    }
};
