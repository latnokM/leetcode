Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false

//time O(n) space O(min(n, k))
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        //sliding window, using hash table
        unordered_set<int> set;
        for(int i = 0; i < nums.size(); ++i) {
            if(set.count(nums[i]) == 1) return true;
            else set.emplace(nums[i]);
            
            if(set.size() > k) 
                set.erase(nums[i - k]);
        }
        return false;
    }
};
