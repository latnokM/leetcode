Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

Your algorithm should run in O(n) complexity.

Example:

Input: [100, 4, 200, 1, 3, 2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

//time O(n) space O(n)
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        //use unordered_set tp get O(1) lookup
        unordered_set<int> set(nums.begin(), nums.end());
        int longestSeq(0);
        
        for(int num : set) {
            //start a new sequence
            if(set.find(num - 1) == set.end()) {
                int curNum(num);
                int curSeq = 1;
                
                while(set.find(curNum + 1) != set.end()) {
                    curNum++;
                    curSeq++;
                }
                //cur seq terminated
                longestSeq = std::max(curSeq, longestSeq);
            }
        }
        return longestSeq;
    }
};
