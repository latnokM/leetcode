Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.


//kadane's algo, O(n)
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        //kadane algo
        if(nums.size() == 1) return nums[0];
        
        int max_end_here(0), min_end_here(0), max_so_far(0);
        for(int i = 0; i < nums.size(); ++i) {
            if(nums[i] < 0) swap(max_end_here, min_end_here);
            max_end_here = max(max_end_here * nums[i], nums[i]);
            min_end_here = min(min_end_here * nums[i], nums[i]);
            max_so_far = max(max_so_far, max_end_here);
        }
        return max_so_far;
    }
};
