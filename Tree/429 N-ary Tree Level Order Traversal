Given an n-ary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if (root == nullptr) return {};
        
        vector<vector<int>> res;
        queue<Node*> q;
        q.push(root);
        while (!q.empty()) {
            int n = q.size();
            vector<int> level;
            for (int i = 0; i < n; ++i) {
                Node *cur = q.front();
                q.pop();
                level.push_back(cur->val);
                for (auto child : cur->children)
                    q.push(child);
            }
            res.push_back(level);
        }
        return res;
    }
};
