Given a binary tree, return the inorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]
Follow up: Recursive solution is trivial, could you do it iteratively?


//recursive, O(n)/O(lgn)
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        //recursive
        vector<int> res;
        inorder(root, res);
        return res;
    }
    
private:
    void inorder(TreeNode* node, vector<int>& res) {
        if (!node) return;
        inorder(node->left, res);
        res.push_back(node->val);
        inorder(node->right, res);
    }
};
