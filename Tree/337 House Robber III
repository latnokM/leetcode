The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." 
Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in 
this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.

Determine the maximum amount of money the thief can rob tonight without alerting the police.

Example 1:

Input: [3,2,3,null,3,null,1]

     3
    / \
   2   3
    \   \ 
     3   1

Output: 7 
Explanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.

//O(n)
class Solution {
public:
    int rob(TreeNode* root) {
        int l = 0, r = 0;
        return getMax(root, l, r);        
    }
    
    int getMax(TreeNode* node, int& l, int& r) {
        if (node == NULL) return 0;
        
        int ll = 0, lr = 0, rl = 0, rr = 0;
        l = getMax(node->left, ll, lr);
        r = getMax(node->right, rl, rr);
        return max(node->val + ll + lr + rl + rr, l + r);
    }
};
