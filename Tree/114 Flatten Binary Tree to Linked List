Given a binary tree, flatten it to a linked list in-place.

For example, given the following tree:

    1
   / \
  2   5
 / \   \
3   4   6
The flattened tree should look like:

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6
          
class Solution {
public:
    void flatten(TreeNode* root) {
        if (root == nullptr) return;
        flatten(root->left);
        flatten(root->right);
        TreeNode *tmp = root->left;
        if (tmp) {
            while (tmp->right) tmp = tmp->right;
            tmp->right = root->right;
            root->right = root->left;
            root->left = nullptr; 
        }
    }
};
