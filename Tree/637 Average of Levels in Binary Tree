Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
Example 1:
Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].
Note:
The range of node's value is in the range of 32-bit signed integer.

class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        if (root == NULL) return {};
        
        vector<double> res;
        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()) {
            int n = q.size();
            double levelSum = 0;
            for (int i = 0; i < n; ++i) {
                TreeNode *cur = q.front();
                q.pop();
                levelSum += cur->val;
                if (cur->left) q.push(cur->left);
                if (cur->right) q.push(cur->right);
            }
            res.push_back(levelSum / n);
        }
        return res;        
    }
};
