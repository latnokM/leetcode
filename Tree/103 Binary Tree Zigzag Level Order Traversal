Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, 
then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if (root == NULL) return {};
        
        vector<vector<int>> res;
        queue<TreeNode*> q;
        bool reverse = false;
        q.push(root);
        
        while (!q.empty()) {
            int n = q.size();
            vector<int> row(n);
            for (int i = 0; i < n; ++i) {
                int index = reverse ? n - i - 1 : i;
                TreeNode *cur = q.front();
                q.pop(); 
                row[index] = cur->val;
                if (cur->left) q.push(cur->left);
                if (cur->right) q.push(cur->right);
            }
            reverse = !reverse;
            res.push_back(row);
        }
        return res;
    }
};
