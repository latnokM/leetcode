Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

Example 1:

Input: 1->2->3->3->4->4->5
Output: 1->2->5
Example 2:

Input: 1->1->1->2->3
Output: 2->3

//O(n)
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode dummy(0);
        ListNode *prev = &dummy, *cur = head;
        dummy.next = head;
        //check cur node, if duplicate go to the last duplicate
        while (cur) {
            while (cur->next && cur->val == cur->next->val) 
                cur = cur->next;
            
            if (prev->next == cur)
                prev = prev->next;
            else 
                prev->next = cur->next;
            
            cur = cur->next;            
        }

        return dummy.next;
    }
};
