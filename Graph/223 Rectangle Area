Find the total area covered by two rectilinear rectangles in a 2D plane.

Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.

Rectangle Area

Example:

Input: A = -3, B = 0, C = 3, D = 4, E = 0, F = -1, G = 9, H = 2
Output: 45
Note:

Assume that the total area is never beyond the maximum possible value of int.


class Solution {
public:
    int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
        //get area of two rect
        int area1 = (C - A) * (D - B), area2 = (H - F) * (G - E);
        //return sum of two area if no overlap
        if (E >= C || H <= B || G <= A || F >= D) return area1 + area2;
        return area1 - (min(D, H) - max(B, F)) * (min(C, G) - max(A, E)) + area2;
    }
};
